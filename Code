
##Fitting a MLR Model to our Data
#Our data set is called Student_Data
attach(Student_Data)
AvG<- (Student_Data$G1+ Student_Data$G2 +Student_Data$G3)/3
x<-lm(AvG~.-G1-G2-G3, data=Student_Data)
summary(x)
avPlots(x)
attach(Student_Data_P)
AvG_P<- (Student_Data_P$G1+Student_Data_P$G2+Student_Data_P$G3)/3
y<-lm(AvG_P~.-G1-G2-G3, data=Student_Data_P)
avPlots(y)

##Step Wise Selection Code
f = ~ school+sex+age+address+famsize+Pstatus+Medu+Fedu+Mjob+Fjob+reason+guardian+traveltime+studytime+failures+schoolsup+famsup+paid+activities+nursery+higher+internet+romantic+famrel+freetime+goout+Dalc+Walc+health+absences
m0 = lm(AvG ~ failures+schoolsup+sex+famsup+goout+studytime)
m.stepup = step(m0, scope = c(lower = ~failures, upper = f))


##prediction interval might not be valid because there is some randomness in the step up function meaning the model might not be the best model
#prediction interval of GOOD math student
predict.mean<-predict(math.lm,newdata = data.frame(failures=3,schoolsup="yes",sex="M",famsup="yes",goout=3,studytime=4,
                                                      Mjob="health",Medu=3,health=3,
                                                      higher="yes",romantic="yes",address="U",freetime=3), interval = "predict", 
                                                      se.fit =T, level = 0.95)
predict.mean$fit
##prediction for BAD math student
predict.mean<-predict(math.lm,newdata = data.frame(failures=3,schoolsup="yes",sex="M",famsup="yes",goout=3,studytime=1,
                                                      Mjob="health",Medu=3,health=3,
                                                      higher="yes",romantic="yes",address="U",freetime=3), interval = "predict", 
                                                      se.fit =T, level = 0.95)
predict.mean$fit
##portuguese GOOD Student
predict.mean<-predict(math.lm,newdata = data.frame(failures=3,schoolsup="yes",sex="M",famsup="yes",goout=3,studytime=1,
                                                      Mjob="health",Medu=3,health=3,
                                                      higher="yes",romantic="yes",address="U",freetime=3), interval = "predict", 
                                                      se.fit =T, level = 0.95)
predict.mean$fit
##portuguese BAD student
predict.mean<-predict(math.lm,newdata = data.frame(failures=3,schoolsup="yes",sex="M",famsup="yes",goout=3,studytime=1,
                                                      Mjob="health",Medu=3,health=3,
                                                      higher="yes",romantic="yes",address="U",freetime=3), interval = "predict", 
                                                      se.fit =T, level = 0.95)
predict.mean$fit




##Problem Code!!
detach(Student_Data)
attach(Student_Data_P)
AvG<- (Student_Data_P$G1+ Student_Data_P$G2 +Student_Data_P$G3)/3
f = ~ school+sex+age+address+famsize+Pstatus+Medu+Fedu+Mjob+Fjob+reason+guardian+traveltime+studytime+failures+schoolsup+famsup+paid+activities+nursery+higher+internet+romantic+famrel+freetime+goout+Dalc+Walc+health+absences
m0 = lm(AvG ~ failures+schoolsup+sex+famsup+goout+studytime)
P.stepup = step(m0, scope = c(lower = ~failures, upper = f))
Port.lm= lm(P.stepup)
plot(Port.lm, which=1)
Port.pt = car::powerTransform(cbind(failures,studytime,Medu,Dalc,absences,AvG) ~ 1, Student_Data_P)
summary(Port.pt)



#prediction interval of GOOD Portuguese student
predict.meanGP<-predict(Port.lm,newdata=data.frame(failures=1,
                              schoolsup="no",sex="F",studytime=4,
                              school="GP",higher="yes",Medu=3,Dalc=1,
                              absences=4,health=3,romantic="no",
                              guardian="mother"), interval ="predict",
                              se.fit =T, level = 0.95)
predict.meanGP$fit

##prediction for BAD Portuguese student
predict.meanBP<-predict(Port.lm,newdata = data.frame(failures=1,
                      schoolsup="no",sex="F", studytime=1,school="GP",
                      higher="yes",Medu=3,Dalc=1,absences=4,health=3,
                      romantic="no",guardian="mother")interval="predict",
                      se.fit =T, level = 0.95)
predict.meanGP$fit
